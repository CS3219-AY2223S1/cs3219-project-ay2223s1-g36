name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - production

env:
  PROJECT_ID: peerprep-366106 
  GAR_LOCATION: asia-southeast1 
  REPOSITORY: peerprep # TODO: update Artifact Registry repository name
  SERVICE: matching-service # TODO: update Cloud Run service name
  REGION: asia-southeast1 # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.CLOUD_RUN_KEY }}'

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)
      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.CLOUD_RUN_KEY }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" matching-service/
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            NODE_ENV=production
            QUESTION_SERVICE_URL=https://question-service-lpaj6pcqsa-as.a.run.app
            DB_USER=postgres
            DB_NAME=postgres
            PROD_SQL_DIALECT=postgres
            PROD_SQL_HOST=/cloudsql/peerprep-366106:asia-southeast1:cs3219-matching-postgres
          secrets: |
            DB_PASSWORD=peerprep_matching_sql_pw:latest

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

# name: Deployment to Google App Engine
# on:
#   push:
#     branches: 
#      - 'production'
# jobs:
#   matching-service-deployment:
#     runs-on: 'ubuntu-latest'
#     steps:
#     - uses: 'actions/checkout@v3'
#     - id: 'auth'
#       uses: 'google-github-actions/auth@v0'
#       with:
#         credentials_json: '${{ secrets.GCP_SA_KEY }}'

#     - id: 'deploy'
#       uses: 'google-github-actions/deploy-appengine@v0'
#       with:
#         deliverables: 'matching-service/app.yaml'

